Все значения разделяются пробелом или переносом строки, запятые не используются, десятичный знак - точка, дроби записываются в виде m/n

Во всех случаях всё содержимое файла после символа @ игнорируется (можно использовать для пояснений).


===
=== Режим многогранника ===
===

Находит оболочку заданного множества точек и таблицу соответствия нормальных векторов к граням многогранника исходным точкам.

Формат ввода:

Первая строка - размерность пространства.

Необязательно - коэффициенты общих уравнений для всех систем. Если используется - на строке до и после них стоит символ $

Необязательно - базис решения. Если используется - на строке до и после них стоит символ #

После (или вместо) этого - описание самих точек.

Пример 1:
2
1 0
0 1
0 0

Пример 2:
3
#
1 0 0
0 1 0
0 0 1
#
1 1 1
4 0 0
0 4 0
0 0 4
2 0 2


===
=== Режим конуса ===
===

Вместо точек даются коэффициенты при неизвестных. Аналогичен предыдущему, но общие уравнения не используются (так как система всего одна).



===
=== Режим пересечения многогранников ===
===

Ищет пересечения нескольких многогранников. У многогранников должна быть одна и та же размерность (n) и их не может быть меньше, чем n-1 (не менее двух в трехмерном пространстве и т.д.)

Формат ввода:

Первая строка - размерность пространства.

Далее - сами многогранники, разделенные символом %

Пример:
3
9 0 0
0 8 0
0 0 7
3 2 1
%
3 0 0
0 4 0
0 0 5
1 2 2


===
=== Режим нахождения объёма Минковского (УБРАНО) ===
===

Формат ввода:

Первая строка - символ l (L малая).

Вторая строка - количество многогранников, для которых считается объём.

Далее - пути к файлам, описывающим многогранники (см. режим многогранника). Пути могут быть относительными.

Пример:
l
2
input_p7.txt
input_p2.txt


===
=== Режим определителя матрицы ===
===

Находит определитель квадратной матрицы или её минора.

Формат ввода:

Первая строка - размерность квадратной матрицы.

Вторая строка - два числа, индексы элемента, для которого ищется минор. Индексация начинается с нуля. Если ищется общий определитель - оба числа -1.

Далее - описание матрицы.

Описание матрицы может задаваться в виде целого числа, десятичной дроби (десятичный разделитель - точка) или рационального числа ( m/n, где / разделяет числитель и знаменатель) 

Пример: 
4
-1 -1
1 0 0 0
1 2 0 0
0 0 3 0
0 0 0 4
@
Это комментарий. Определитель этой матрицы равен 24


===
=== Режим нахождения обратной матрицы ===
===

Находит обратную матрицу для данной.

Формат ввода:

Первая строка - размерность квадратной матрицы.

Далее - описание матрицы.

Описание матрицы может задаваться в виде целого числа, десятичной дроби (десятичный разделитель - точка) или рационального числа ( m/n, где / разделяет числитель и знаменатель) 

Пример: 
3
 1 0 0
-3 1 0
 0 0 1
@
Это комментарий. Обратной матрицей является
1 0 0
3 1 0
0 0 1


===
=== Режим нахождения унимодулярной матрицы Альфа для данной матрицы ===
===

Находит унимодулярную матрицу Альфа сделующим образом:
Создаются две единичные матрицы - для строк и для столбцов оригинальной матрицы.
Оргинальная матрица приводится к диагональному виду путём последовательных линейных преобразований, при этом все преобразования строк повторяются единичной матрицей для строк, аналогично с преобразованиями столбцов.
Затем обе единичные матрицы обращаются и перемножаются.

Формат ввода:

Первая строка - размерность квадратной матрицы.

Далее - описание матрицы.

Описание матрицы может задаваться в виде целого числа, десятичной дроби (десятичный разделитель - точка) или рационального числа ( m/n, где / разделяет числитель и знаменатель) 

Пример: 
3
1 3 4
3 4 2
0 0 0
@
Это комментарий. Результат должен быть следующим:
1  3  4
3 10 14
0  0  1